#separator:tab
#html:false
#notetype column:1
#deck column:2
Basic	L3::FDI::Machines de Turing et Décidabilité	Machine de Turing	Une machine de Turing est définie formellement par un 7-uplet \((Q, \Sigma, \Gamma, \delta, q_0, q_a, q_r)\): - \(Q\) l'ensemble des états - \(\Sigma\) l'alphabet d'entrée - \(\Gamma\) l'alphabet de ruban - \(\delta : Q \times \Gamma \to Q \times \Gamma \times\{G,D\}\) (on peut parfois ajouter l'option de la tête immobile - \(q_0\) l'état initial - \(q_a\) l'état acceptant - \(q_r\) l'état de rejet
Basic	L3::FDI::Machines de Turing et Décidabilité	Fonctionnement de la machine de Turing	- Le ruban contient initialement l'entrée sur les premières cases et des blancs au-delà - On calcule en appliquant la fonction de transition. La tête reste immobile si elle est tout à gauche et qu'elle va à gauche  - La machine s'arrête si elle entre dans \(q_a\) ou \(q_r\) en acceptant ou refusant respectivement.
Basic	L3::FDI::Machines de Turing et Décidabilité	Représentation de l'état d'une machine de Turing	L'état d'une machine de Turing est représenté par l'état interne, l'état du ruban et la position de la tête. On représente ceci par le mot infini \(uqvB^\infty\), avec \(q\) l'état interne et \(uvB^\infty\) l'état du ruban avec la tête sur la première lettre de \(v\).
Basic	L3::FDI::Machines de Turing et Décidabilité	Langage accepté	Le langage accepté par une machine de Turing \(M\) est l'ensemble des mots \(w \in \Sigma^*\) tels que \(M\) entre dans l'état \(q_a\) pendant le calcul sur l'entrée \(w\).
Basic	L3::FDI::Machines de Turing et Décidabilité	Langage reconnaissable / décidable	\(L\) est reconnaissable si c'est le langage accepté par une machine \(M\). \(L\) est décidable s'il existe une machine \(M\) qui accepte \(L\) et rejette \(\bar L\).
Basic	L3::FDI::Machines de Turing et Décidabilité	Lien langage décidable et reconnaissable	Un langage décidable est reconnaissable.
Basic	L3::FDI::Machines de Turing et Décidabilité	Variantes de machines de Turing	- Machine à plusieurs rubans - Machine non déterministe Ces deux variantes sont équivalentes aux machines de Turing simples.
Basique Maths	L3::FDI::Machines de Turing et Décidabilité	Problème du tout pour les machines de Turing, décidabilité	Le problème du tout pour les machines de Turing correspond au langage: \(Tout_{MT} = \{\langle M \rangle, L(M) = \Sigma^*\}\). Ce problème est indécidable.
Basique Maths	L3::FDI::Machines de Turing et Décidabilité	Historique de calcul	L'historique du calcul acceptant de \(M\) sur l'entrée \(w\) est une suite de configurations \(C_1, \dots, C_n\) de \(M\) telles que - \(C_1\) est la configuration initiale de \(M\) sur l'entrée \(w\) - \(C_n\) est une configuration acceptante - \(C_{i + 1}\) est la configuration qui suit immédiatement \(C_i\) dans un calcul de \(M\), pour tout \(1 \le i < n\).
Basique Maths	L3::FDI::Machines de Turing et Décidabilité	Théorème de récursion	Pour \(T\) machine de Turing calculant une fonction partielle \(t : \Sigma^* \times \Sigma^* \to \Sigma^*\), Il existe une machine de Turing \(R\) calculant une fonction partielle \(r : \Sigma^*\to \Sigma^*\) telle que pour tout mot \(u \in \Sigma^*, r(w) = t(\langle R \rangle, w)\).
Basique Maths	L3::FDI::Machines de Turing et Décidabilité	Problème du tout pour les automates à piles et les grammaires	\(T_{CFG}\) et \(T_{PDA}\)(arrêt pour les automates à pile) sont équivalents.
