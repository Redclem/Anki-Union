#separator:tab
#html:false
#notetype column:1
#deck column:2
Basique Maths	L3::Théorie de la programmation::Termes et unification	Ensemble des termes	Avec: - \(\Sigma\) un ensemble fini de constantes, où chaque constante a une arité dans \(\N\), notées \(f, g ,a ,b\). - \(V\) un ensemble infini de variables / d'inconnues notées \(X, Y, Z\) ou \(x,y,z\). L'ensemble \(T(\Sigma, V)\) des termes sur \(\Sigma\) et \(V\) est défini de manière inductive par \(t ::= f^k(t_1, \dots, t_k) | X\).
Basique Maths	L3::Théorie de la programmation::Termes et unification	Ensemble des variables	On définit par induction sur \(t \in T(\Sigma, V)\) l'ensemble \(Vars(t)\) des variables. 2 familles de cas: - \(Vars(X) = \{X\}\) - \(Vars(f(t_1, \dots ,t_k)) = \bigcup\limits_{i = 1}^k Vars(t_i)\)
Basique Maths	L3::Théorie de la programmation::Termes et unification	Substitution	Une substitution (sur \(\Sigma, V\)) notée \(\sigma, \sigma', \sigma_1\) est une fonction partielle à domaine de définition fini de \(V\) dans \(T(\Sigma, V)\). On représente \(\sigma\) par un ensemble fini de couples \((X, t)\) tels que si \((X,t), (X,t') \in \sigma, t = t'\).
Basique Maths	L3::Théorie de la programmation::Termes et unification	Domaine d'une substitution	Le domaine \(dom(\sigma)\) d'une substitution \(\sigma\) est son ensemble de définition, i.e. \(dom(\sigma) = \{X \in V|\exists t, (X,t) \in \sigma\}\)
Basique Maths	L3::Théorie de la programmation::Termes et unification	Application d'une substitution	Le résultat de l'application de \(\sigma\) à \(t \in T(\Sigma, V)\) noté \(\sigma(t)\) est défini par induction sur \(t\) : 2 familles de cas: - \(\sigma(f(t_1, \dots, t_k)) = f(\sigma(t_1), \dots, \sigma(t_k))\) - \(\sigma(X) = X\) si \(X \notin dom(\sigma)\) - \(\sigma(X) = \sigma(X)\) si \(X \in dom(\sigma)\).
Basique Maths	L3::Théorie de la programmation::Termes et unification	Notation substitution / application	On définit une substitution par les couples comme \(\sigma = [\frac {t_1}{X_1}, \dots, \frac {t_n}{X_n}]\) et \(t[\frac {t_1}{X_1}, \dots, \frac {t_n}{X_n}] = \sigma(t)\) avec la substitution précédemment définie.
Basique Maths	L3::Théorie de la programmation::Termes et unification	Problème d'unification	Un problème d'unification est un ensemble de paires de termes dans \(T(\Sigma, V)\) appelées équations: \(\mathcal P= \{\{t_1, u_1\}, \dots, \{t_k, v_k\}\}\), noté \( \mathcal P = \{t_1 =^?u_1,\dots, t_k =^?u_k\} \).
Basique Maths	L3::Théorie de la programmation::Termes et unification	Unificateur	Un unificateur d'un problème d'unification \(\mathcal P\) est une substitution \(\sigma\) telle que \(\forall t=^?u \in \mathcal P, \sigma(t) = \sigma(u)\). On note \(U(\mathcal P)\) l'ensemble des unificateurs de \(\mathcal P\).
Basique Maths	L3::Théorie de la programmation::Termes et unification	Substitution en tant que problème d'unification	Une substitution \(\sigma = \{(X_i, t_i)\}\) peut être vue comme le problème d'unification correspondant \(\mathcal P = \{X_i=^?t_i\}\). On notera simplement \(\sigma\) ce problème.
Basique Maths	L3::Théorie de la programmation::Termes et unification	Lemme sur l'unification	Pour \(\sigma\) une substitution, \(\forall \sigma' \in U(\sigma) , \sigma'\circ \sigma =\sigma'\).
Basique Maths	L3::Théorie de la programmation::Termes et unification	État dans l'algorithme d'unification	Un état est soit un couple \((\mathcal P, \sigma)\) soit l'état d'échec \(\bot\). Un état \((\varnothing, \sigma)\) est un état de réussite.
Basique Maths	L3::Théorie de la programmation::Termes et unification	Algorithme d'unification	L'algorithme d'unification correspond à une relation notée \(\to\) définie par: \(\bot \not \to\), \((\varnothing, \sigma) \not \to\) - 5 cas pour un état \((\{t=^?t'\}\uplus\mathcal P,\sigma)\): - \((\{f(t_1, \dots, f_k)=^?f(u_1, \dots, u_k)\}\uplus\mathcal P,\sigma) \to (\{t_1 =^? u_1, \dots, t_k =^? u_k\} \uplus \mathcal P, \sigma)\) - \((\{f(t_1, \dots, f_k)=^?g(u_1, \dots, u_k)\}\uplus\mathcal P,\sigma) \to \bot\) si \(f \neq g\) - \((\{X =^? t\}\uplus\mathcal P,\sigma) \to (\mathcal P[\frac tX], [\frac tX] \circ \sigma)\) si \(X \notin Vars(t)\) - \((\{X =^? t\}\uplus\mathcal P,\sigma) \to \bot\) si \(X \in Vars(t)\) et \(t \neq X\) - \((\{X =^? X\}\uplus\mathcal P,\sigma) \to (\mathcal P, \sigma)\)
Basique Maths	L3::Théorie de la programmation::Termes et unification	Unificateur le plus général	Un unificateur le plus général de \(\mathcal P\) est un \(\sigma \in  U(\mathcal P)\) tel que \(\forall \sigma' \in U(\mathcal P), \exists \sigma'', \sigma' = \sigma'' \circ \sigma\).
Basique Maths	L3::Théorie de la programmation::Termes et unification	Propriété de l'algorithme d'unification	L'algorithme d'unification calcule un unificateur le plus général si et seulement si le problème initial avait une solution.
