#separator:tab
#html:false
#notetype column:1
#deck column:2
Basique Maths	Seconde année::Informatique::Théorie des jeux	Jeu	Un jeu est un quadruplet \( (G, s_0, T_1, T_2) \) où: - \( G = (S,A) \) est un graphe orienté biparti, i.e. \( G = (S_1\sqcup S_2, A) \) , où \( A \subset S_1 \times S_2 \cup S_2 \times S_1 \)   \( S_1 \) : états du joueur 1  \( S_2 \) : états du joueur 2  \( G \) : arène - \( s_0 \in S \) : état de départ (unique source de \( G \) ) - Puits : états terminaux, dont:  \( T_1 \) : états gagnants pour 1  \( T_2 \) : états gagnants pour 2 Autres états : états nuls  \( (s,t) \in A \) signifie que depuis l'état du jeu \( s \) , on peut jouer un coup qui emmène en \( t\). On ne considère que des graphes sans cycles.
Basique Maths	Seconde année::Informatique::Théorie des jeux	Partie	une partie est un chemin de \( s_0\)à un sommet terminal.
Basique Maths	Seconde année::Informatique::Théorie des jeux	Stratégie	Une stratégie \( f \) pour le joueur \( i \) est une fonction \( f : S_i \to S_{3 - i} \) telle que \( \forall s \in S_i, (s, f(s)) \in A\)
Basique Maths	Seconde année::Informatique::Théorie des jeux	Position gagnante	Un sommet \( s \in S \) est appeléposition gagnante pour le joueur \( i \) s'il existe une stratégie gagnante pour \( i \) dans le jeu \( (G,s)\).
Basique Maths	Seconde année::Informatique::Théorie des jeux	Attracteur	L'ensemble des positions gagnantes pour \( i \) est appelé attracteur pour \( i\).
Basique Maths	Seconde année::Informatique::Théorie des jeux	Calcul des attracteurs	On définit par induction \( A_n(i) \) pour \( i \in \{1, 2\} \) par: - \( A_0(i) = T_i \)  - Pour \( n \in \N \) , \( A_{n + 1} (i) = A_n(i) \cup \{s \in S_i | \exists t \in A_n(i), (s,t) \in A\} \cup \{s \in S_{3-1} | \forall (s,t) \in A, t \in A_n(i)\} \)   \( A_n(i) \) converge alors vers un ensemble \( A(i) \) qui est l'attracteur du joueur \( i\).
Basique Maths	Seconde année::Informatique::Théorie des jeux	Construction d'une stratégie optimale	On construit une stratégie optimale \( f \) pour le joueur \( i \) en distinguant selon \( s \in S_i \) : - si \( s \in A(i) \) , il existe \( t \in A(i) \) tel que \( (s,t) \in A \) . On pose \( f(s) = t \) avec \( t \) un tel sommet. - si \( s \in A(3 - i) \) , on choisit \( t \) arbitrairement tel que \( (s,t) \in A \) . - sinon, on choisit \( t \in S\setminus(A(i) \cup A(3-i)) \) tel que \( (s,t) \in A \) et \( f(s) = t\).
Basique Maths	Seconde année::Informatique::Théorie des jeux	Condition pour que la stratégie optimale soit gagnante	Une stratégie optimale pour \( i \) est gagnante pour \( i \) si \( s_0 \in A(i)\).
Basique Maths	Seconde année::Informatique::Théorie des jeux	Heuristique	Une heuristique est une fonction qui donne une approximation d'une situation et qui est facile à calculer.
Basique Maths	Seconde année::Informatique::Théorie des jeux	Algorithme min-max	On attribue un score à chaque état du graphe des configurations: - \( 1 \) pour une position gagnante pour le joueur 1 - \( -1 \) pour une position gagnante pour le joueur 2 - \( 0 \) pour une position nulle On peut alors calculer récursivement le score d'un état: - Si \( s \) est final, renvoyer \( 1, -1, 0 \) selon que \( s \) est nul, ou gagnant pour 1 ou 2 - Si \( s \in S_1 \) , renvoyer le maximum des scores des voisins de \( s \)  - Si \( s \in S_2 \) , renvoyer le minimumdes scores des voisins de \( s\)
Basique Maths	Seconde année::Informatique::Théorie des jeux	Stratégie par min-max	À partir d'un état \( s \) , - On choisit une profondeur d'exploration \( p \)  - On considère le sous-graphe des sommets à distance au plus \( p \) de \( s \) . - On attribue un score à chaque sommet \( t \) de ce graphe selon le principe du min-max: * si \( t \) est un puits de ce sous-graphe, le score de \( t \) est donné par l'heuristique * sinon, si \( t \in S_1 \) , le score de \( t \) est le maximum des scores voisins de \( t \)  * sinon, si \( t \in S_2 \) , le score de \( t \) est le minimum des scores voisins de \( t \)  - On choisit comme coup à jouer le voisin de \( s\)qui maximise le score.
Basique Maths	Seconde année::Informatique::Théorie des jeux	Idée de l'élagage Alpha-Beta	On garde en mémoire les bornes du score d'un noeud de l'arbre. Si le score d'un fils de ce noeud sort de ces bornes, on peut arrêter complètement l'exploration de ce fils, et couper les branches restantes de ce fils.
Basique Maths	Seconde année::Informatique::Théorie des jeux	Stratégie gagnante	 \( f \) est gagnante pour \( i \) ssi pour toute stratégie \( g \) du joueur \( 3 - i \) , \( \exists n \in \N, (f \circ g)^n(s_0) \in T_i \text{ ou } g \circ (f \circ g)^n(s_0) \in T_i \text{ ou } f \circ (g \circ f)^n(s_0) \in T_i \text{ ou } (g \circ f)^n(s_0) \in T_i\)
