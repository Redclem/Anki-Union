#separator:tab
#html:false
#notetype column:1
#deck column:2
Basique	Seconde année::Informatique::Logique	Formule propositionnelle	Avec \(V\) un ensemble de variables propositionnelles, les formules propositionnelles propositionnelles sur \(V\) sont définies par induction: - \(\top, \bot\), et les variables de \(V\) sont des formules propositionnelles - Les opérateurs \(\neg, \wedge, \vee, \Rightarrow\) appliqués à des formules propositionnelles, sont des variables propositionnelles.
Basique	Seconde année::Informatique::Logique	Arbre binaire associé à une formule	On associe l'arbre \(A(\varphi)\) à la formule propositionnelle \(\varphi\): - \(A(\varphi)\) est une feuille \(\varphi\) si \(\varphi \in V \cup \{\top, \bot\}\) - Si \(\varphi = \neg \psi, A(\varphi) = N(\neg, A(\varphi))\) - Si \(\varphi = \psi \wedge \sigma, A(\varphi) = N(\wedge, \varphi, \sigma)\), et de même pour \(\vee, \Rightarrow\)
Basique	Seconde année::Informatique::Logique	Valuation	Une valuation est une fonction de \(\{0, 1\}^V\).
Basique	Seconde année::Informatique::Logique	Nombre de valuations	Il y a exactement \(2^{|V|}\) valuations sur \(V\).
Basique	Seconde année::Informatique::Logique	Extension d'une valuation aux formules propositionnelles	On étend la définition d'une valuation \(\mu\) à \(\mathcal F_p(V)\) par: - \(\mu(\top) = 1; \mu(\bot) = 0\) - Pour \(x \in V, \mu(x) = \mu(x)\) (variable / formule) - Pour \(\varphi, \psi \in \mathcal F_p(V)\): * \(\mu(\neg \varphi) = 1 - \mu (\varphi)\) * \(\mu(\varphi \wedge\psi) = \min(\mu(\varphi), \mu(\psi))\) * \(\mu(\varphi \vee\psi) = \max(\mu(\varphi), \mu(\psi))\)  * \(\mu(\varphi \Rightarrow \psi) = \max(1 - \mu(\varphi), \mu(\psi))\)
Basique	Seconde année::Informatique::Logique	Modèle, ensemble des modèles	Un modèle de \(\varphi \in \mathcal F_p(V)\) est une valuation telle que \(\mu(\varphi) = 1\). On note \(\mathcal M(\varphi)\) l'ensemble des modèles de \(\varphi\).
Basique	Seconde année::Informatique::Logique	Modèles des opérateurs	Soient \(\varphi, \psi \in \mathcal F_p(V)\); - \(\mathcal M(\neg \varphi) = \overline{\mathcal M(\varphi)}\) - \(\mathcal M(\varphi \wedge \psi) = \mathcal M(\varphi) \cap \mathcal M(\psi)\) - \(\mathcal M(\varphi \vee \psi) = \mathcal M(\varphi) \cup \mathcal M(\psi)\) - \(\mathcal M(\varphi \Rightarrow \psi) = \overline{\mathcal M(\varphi)} \cup \mathcal M(\psi)\) - \(\mathcal M(\top) = \{0, 1\}^V\) - \(\mathcal M(\bot) = \varnothing\)
Basique	Seconde année::Informatique::Logique	Nombre de tables de vérité	Il existe \(2^{2^{|V|}}\) tables de vérité sur \(V\).
Basique	Seconde année::Informatique::Logique	Équivalence / Implication sémantiques	Pour \(\varphi, \psi \in \mathcal F_p(V)\) - \(\varphi\) est sémantiquement équivalente à \(\psi\), noté \(\varphi \equiv \psi\), ssi \(\mathcal M(\varphi) = \mathcal M(\psi)\) - \(\varphi\) implique sémantiquement \(\psi\), noté \(\varphi \models \psi\), ssi \(\mathcal M(\varphi) \subseteq \mathcal M(\psi)\)
Basique Maths	Seconde année::Informatique::Logique	Substitution (formule propositionnelle)	Soient \( \varphi,\psi \in \mathcal F_p(V) \) . On appelle substitution de \( x \) par \( \psi \) dans \( \varphi \) , \( \varphi[x := \psi] \) la formule \( \varphi \) où chaque occurrence de \( x \) est remplacée par \( \psi\).
Basique Maths	Seconde année::Informatique::Logique	Équivalence sémantique de substitutions	Soient \( \varphi, \psi,\sigma \in \mathcal F_p(V) \) telles que \( \varphi \equiv \psi \) . Soit \( x \in V \) . Alors:  \( \varphi[x := \sigma] \equiv \psi[x := \sigma]\)
Basique Maths	Seconde année::Informatique::Logique	Tautologie, antilogie, satisfaisabilité	Soit \( \varphi \in \mathcal F_p(V) \) . \( \varphi \) est: - satisfaisable si \( \mathcal M(\varphi) \ne \varnothing \)  - une tautologie si \( \mathcal M(\varphi) = \{0, 1\}^V \)  - une antilogie si \( \mathcal M(\varphi) = \varnothing\)
Basique Maths	Seconde année::Informatique::Logique	Caractérisation des tautologies	- \( \varphi \equiv \top \) ssi \( \top \models \varphi \) ssi \( \varphi \) est une tautologie - \( \varphi \equiv \psi \) ssi \( \varphi \Leftrightarrow \psi \) est une tautologie - \( \varphi \models \psi \) ssi \( \varphi \Rightarrow \psi\) est une tautologie
Basique Maths	Seconde année::Informatique::Logique	Réduction des formules sans \(\top,\bot\)	Toute \( \varphi \in \mathcal F_p(V) \) est \( \equiv \) à une formule de taille inférieure à \( |\varphi| \) qui est: * \( \top \)  * \( \bot \)  * une formule ne contenant ni \( \top \) ni \( \bot\)
Basique Maths	Seconde année::Informatique::Logique	Algorithme de Quine	- Simplifier \( \varphi \)  - si \( \varphi \ne \top \) et \( \varphi \ne \bot \) : * Soit \( x \) une variable dans \( \varphi \)  * Renvoyer \( N(\varphi, Quine(\varphi[x:=\bot]), Quine(\varphi[x:=\top])) \)  - sinon renvoyer \( \varphi\)
Basique Maths	Seconde année::Informatique::Logique	Satisfaisabilité / tautologie selon l'algorithme de Quine	- \( \varphi \) est satisfaisable ssi \( Quine(\varphi) \) contient des feuilles \( \top \)  - \( \varphi \) est une tautologie ssi \( Quine(\varphi) \) ne contient pas de feuilles \( \bot\)
Basique Maths	Seconde année::Informatique::Logique	Forme normale conjonctive / disjonctive	Forme normale conjonctive (FNC) : conjonction de disjonctions Forme normale disjonctive (FND) : Disjonction de conjonctions
Basique Maths	Seconde année::Informatique::Logique	Équivalence à une FNC / FND	Toute \( \varphi \in \mathcal F_p(V) \) est \( \equiv\) à une FNC et FND.
Basique Maths	Seconde année::Informatique::Logique	Segment	"On appelle segment un couple \( (\Gamma, \varphi) \) où \( \Gamma \subseteq \mathcal F_p(V), \varphi \in \mathcal F_p(V) \) . On note généralement \( \Gamma \vdash \varphi \) , "" \( \Gamma \) démontre \( \varphi\)"""
Basique Maths	Seconde année::Informatique::Logique	Règle d'inférence	On appelle règle d'inférence un couple formé de: - Un ensemble de séquents : prémisses - Un séquent : conclusion Une règle \( R \) se présente sous la forme:  \( \frac{\Gamma_1 \vdash \varphi_1 \dots \Gamma_n \vdash \varphi_n}{\Gamma \vdash \varphi}\)
Basique Maths	Seconde année::Informatique::Logique	Axiome	Un axiome est une règle sans prémisses: \( \overline{\Gamma \vdash \varphi}\)
Basique Maths	Seconde année::Informatique::Logique	Système déductif	Un système déductif est un ensemble de règles d'inférence
Basique Maths	Seconde année::Informatique::Logique	Preuve	Un preuve d'un séquent dans un système déductif est définie par induction: - Si \( \overline{\Gamma \vdash \varphi} \) est un axiome, \( \overline{\Gamma \vdash \varphi} \) est une preuve de \( \Gamma \vdash \varphi \) . - Si \( \frac{\Gamma_1 \vdash \varphi_1 \dots \Gamma_k \vdash \varphi_k}{\Gamma \vdash \varphi}R \) est une règle d'inférence et  \( P_1, \dots, P_k \) des preuves de \( \Gamma_1 \vdash \varphi_1, \dots, \Gamma_k \vdash \varphi_k \) , alors  \( \frac{P_1 \dots P_k}{\Gamma \vdash \varphi}R \) est une preuve de \( \Gamma \vdash \varphi\)
Basique Maths	Seconde année::Informatique::Logique	Systèmes équivalents, dérivabilité, théorèmes	- Deux systèmes déductifs sont équivalents si tout séquent prouvable dans l'un est prouvable dans l'autre - Une règle est dérivable si on peut prouver sa conclusion en admettant ses prémisses comme axiomes - on dit que \( \varphi \) est un théorème si \( \vdash \varphi\).
Basique Maths	Seconde année::Informatique::Logique	Logique minimale	La logique minimale est constituée de quatre règles d'inférences: - Axiome : \( \frac{}{\Gamma, \varphi \vdash \varphi}ax \)  - Affaiblissement : \( \frac{\Gamma \vdash \varphi}{\Gamma, \psi \vdash \varphi}aff \)  - Implication; introduction :  \( \frac{\Gamma, \varphi \vdash \psi}{\Gamma\vdash \varphi \to \psi}\to_i \) , élimination : \( \frac{\Gamma\vdash \varphi \quad \Gamma \vdash\varphi \to \psi}{\Gamma\vdash \psi }\to_e\)
Basique Maths	Seconde année::Informatique::Logique	Littéral	Un littéral est une variable ou sa négation
Basique Maths	Seconde année::Informatique::Logique	Clause disjonctive / conjonctive	disjonction / conjonction de littéraux
Basique Maths	Seconde année::Informatique::Logique	Règles d'inférence, conjonction	Introduction : \( \frac{\Gamma \vdash \varphi \quad \Gamma \vdash \psi}{\Gamma \vdash \varphi \wedge \psi}\wedge_i \)  Élimination : \( \frac{\Gamma \vdash \varphi \wedge \psi}{\Gamma \vdash \varphi}\wedge^g_e \) , et \( \frac{\Gamma \vdash \varphi \wedge \psi}{\Gamma \vdash \psi}\wedge^d_e\)
Basique Maths	Seconde année::Informatique::Logique	Règles d'inférence, disjonction	Introduction : \( \frac{\Gamma \vdash \varphi}{\Gamma \vdash \varphi \wedge \psi}\wedge^g_i \) , et \( \frac{\Gamma \vdash \psi}{\Gamma \vdash \varphi \wedge \psi}\wedge^d_i \)  Élimination : \( \frac{\Gamma \vdash \varphi\vee\psi \quad \Gamma, \varphi \vdash \sigma \quad \Gamma, \psi \vdash \sigma}{\Gamma \vdash \sigma}\vee_e\)
Basique Maths	Seconde année::Informatique::Logique	Règles d'inférence, négation	Introduction : \( \frac{\Gamma, \varphi \vdash \bot}{\Gamma \vdash \neg \varphi}\neg_i \)  Élimination : \( \frac{\Gamma \vdash \varphi \quad \Gamma \vdash \neg \varphi}{\Gamma \vdash \bot}\neg_e\)
Basique Maths	Seconde année::Informatique::Logique	Règle d'introduction du vrai	 \( \frac{}{\Gamma \vdash \top}\top_i\)
Basique Maths	Seconde année::Informatique::Logique	Logique intuitionniste	La logique intuitionniste correspond à la logique minimale à laquelle on rajoute le principe d'explosion / principe d'élimination du faux: \( \frac{\Gamma \vdash \bot}{\Gamma \vdash \varphi}\bot_e\)
Basique Maths	Seconde année::Informatique::Logique	Logique classique	La logique classique correspond à la logique minimale à laquelle on rajoute le raisonnement par l'absurde: \( \frac{\Gamma, \neg \varphi \vdash \bot}{\Gamma \vdash \varphi}raa\)
Basique Maths	Seconde année::Informatique::Logique	Système déductif correct, complet, consistant / cohérent	Un système déductif est: - Correct si \( \Gamma \vdash \varphi \) implique \( \Gamma \models \varphi \)  - Complet si \( \Gamma \models \varphi \) implique \( \Gamma \vdash \varphi \)  - Consistant ou cohérent si \( \not\vdash \bot \) , i.e. \( \bot\) n'est pas un théorème.
Basique Maths	Seconde année::Informatique::Logique	Propriétés de la logique classique	La logique classique est correcte, cohérente et complète (dernier point HP).
Basique Maths	Seconde année::Informatique::Logique	Langage du premier ordre	Un langage du premier ordre est une famille de symboles: - de fonctions, \( S_f \)  - de relations, \( S_r\) À chaque symbole est associé une arité; une fonction d'arité 0 est une constante, une relation d'arité 0 est une variable propositionnelle.
Basique Maths	Seconde année::Informatique::Logique	Terme, terme clos	Avec \( \chi \) un ensemble infini dénombrable de variables et \( S_f \) un ensemble de fonctions d'arité quelconques. L'ensemble des termes est défini par induction par: - \( x \in \chi \) est un terme - Pour \( C\in S_F \) constante, \( C \) est un terme - Pour \( f \in S_F \) d'arité \( n > 0 \) et \( t_1, \dots, t_n \) des termes, \( f(t_1, \dots, t_n)\) est un terme. Un terme sans variable est clos.
Basique Maths	Seconde année::Informatique::Logique	Formule de la logique du premier ordre	Avec \( \mathcal L \) un langage du premier ordre, l'ensemble des formules de la logique du premier ordre est défini par induction par: - une formule atomique, de la forme \( R(t_1, \dots, t_n) \) , avec \( R \in \mathcal R \) une relation d'arité \( n \) et \( t_1, \dots, t_n \) des termes est une formule de la logique du premier ordre. - Si \( \varphi \) , \( \psi \) sont des formules de la logique du premier ordre, \( \neg \varphi, \varphi \wedge \psi, \varphi \vee \psi, \varphi \to \psi, \forall x \varphi, \exists x \varphi\) le sont aussi.
Basique Maths	Seconde année::Informatique::Logique	Occurence, liée / locale	Une occurence de \( x \) dans \( \varphi \) est une feuille \( x \) dans l'arbre syntaxique de \( \varphi \) . Une occurence est liée (ou locale) sur cette feuille possède un ancêtre \( \forall x \) ou \( \exists x\). Elle est dite libre ou globale sinon.
Basique Maths	Seconde année::Informatique::Logique	Variable libre dans une formule, formule close	Une variable est libre dans une formule si elle possède une occurence libre dans \( \varphi\). Une formule sans variable libre est dite close.
Basique Maths	Seconde année::Informatique::Logique	Substitution dans une formule du premier ordre	Soit \( \varphi \) une formule du premier ordre, \( x \) une variable et \( t \) un terme. On appelle substitution de \( x \) par \( t \) dans \( \varphi \) , noté \( \varphi[x := t] \) la formule obtenue en: - renommant toutes les occurences liées dans \( \varphi \) de chaque variable \( y \) qui est libre dans \( t \)  - remplaçant toutes les occurences libres de \( x \) dans \( \varphi \) par \( t\).
Basique Maths	Seconde année::Informatique::Logique	Règles d'inférence, quantificateur existentiel	Introduction : \( \frac{\Gamma \vdash \varphi [x := t]}{\Gamma \vdash \exists x \varphi}\exists_i \)  Élimination : \( \frac{\Gamma \vdash \exists x \varphi \quad \Gamma, \varphi \vdash \psi \quad x \notin V_F(\Gamma) \cup V_F(\psi)}{\Gamma \vdash \psi}\exists _e\)
Basique Maths	Seconde année::Informatique::Logique	Règles d'inférence, quantificateur universel	Introduction : \( \frac{\Gamma \vdash \varphi \quad x \notin V_F(\Gamma)}{\Gamma \vdash \forall x \varphi}\forall_i \)  Élimination : \( \frac{\Gamma \vdash \forall x \varphi}{\Gamma \vdash \varphi[x :=t]}\forall_e\)
