#separator:tab
#html:false
#notetype column:1
#deck column:2
Basique Maths	Seconde année::Informatique::Problèmes et décidabilité	Problème de décision	"On appelle problème de décision la donnée d'une instance et d'une question dichotomique: - Instance : Un objet possédant certaines caractéristiques - Question : Une question à laquelle on ne peut répondre que ""oui"" ou ""non"" On appelle instance positive (resp. négative) une instance pour laquelle la réponse à la question est ""oui"" (resp. ""non"")"
Basique Maths	Seconde année::Informatique::Problèmes et décidabilité	Problème d'optimisation	On appelle problème d'optimisation la donnée d'une instance, d'une description de la solution et d'une mesure à optimiser: - Instance : un objet possédant certaines caractéristiques - Solution : La structure de la solution cherchée avec des conditions éventuelles - Optimisation : étant données une instance \( x \) et une solution \( y \) , la mesure est une fonction \( f(x,y) \) (en général à valeur dans \( \N \) ou \( \R \) ) qu'on cherche à maximiser ou minimiser selon \( y\).
Basique Maths	Seconde année::Informatique::Problèmes et décidabilité	Taille d'une instance	Pour un problème donné (de décision ou d'optimisation), on définit la taille de l'instance comme l'espace mémoire nécéssaire pour représenter l'instance. Comme la taille intervient dans les calculs de complexité, on ne s'intéresse généralement qu'à un ordre de grandeur, donc l'unité n'a pas d'importance.
Basique Maths	Seconde année::Informatique::Problèmes et décidabilité	Décidabilité	Un problème de décision est dit décidable s'il existe un algorithme/programme/fonction dans le modèle de calcul choisi permettant de le résoudre, c'est-à-dire un algorithme qui termine toujours en temps fini et répond correctement à la question posée. Il est dit indécidable sinon.
Basique Maths	Seconde année::Informatique::Problèmes et décidabilité	Décidabilité du problème de l'arrêt	Le problème ARRÊT est indécidable.
Basique Maths	Seconde année::Informatique::Problèmes et décidabilité	Semi-décidabilité (H.P.)	"On dit qu'un problème de décision est semi-décidable s'il existe un algorithme qui résoud correctement le problème pour toutes les instances positives (celles dont la réponse est ""oui"")."
Basique Maths	Seconde année::Informatique::Problèmes et décidabilité	Semi-décidabilité du problème de l'arrêt	Le problème ARRÊT est semi-décidable.
Basique Maths	Seconde année::Informatique::Problèmes et décidabilité	Réduction	On dit qu'un problème de décision \( A \) se réduit à un problème de décision \( B \) , noté \( A \le B \) , si la résolution du problème \( B \) peut permettre celle du problème \( A \) . On parle de réduction many-one si la résolution d'une seule instance de \( B \) permet de résoudre une instance de \( A \) . On note \( A \le_m B \) . On parle On parle de réduction Turing si la résolution d'une ou plusieurs instances de \( B \) permet de résoudre une instance de \( A \) . On note \( A \le_T B\).
Basique Maths	Seconde année::Informatique::Problèmes et décidabilité	Réduction et décidabilité	Soient \( A \) et \( B \) deux problèmes de décision tels que \( A\le B \) . Alors: - si \( A \) est indécidable, alors \( B \) aussi; - si \( B \) est décidable, alors \( A\)aussi.
Basique Maths	Seconde année::Informatique::Problèmes et décidabilité	Problème de l'arrêt	Le problème de l'arrêt est défini de la manière suivante: ARRÊT: - Instance : une fonction \( f \) et un argument \( x \)  - Question : est-ce que l'exécution de \( f(x)\)termine en temps fini?
Basique Maths	Seconde année::Informatique::Problèmes et décidabilité	Problème de l'arrêt (vide)	Le problème de l'arrêt vide est défini de la manière suivante: ARRÊT (vide): - Instance : une fonction \( f \)  - Question : est-ce que l'exécution de \( f\)sans argumenttermine en temps fini?
Basique Maths	Seconde année::Informatique::Problèmes et décidabilité	Décidabilité de l'arrêt vide	La problème ARRÊT (vide) est indécidable.
